/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import Models.Book;
import Models.UserModel;
import Service.BookService;
import Service.UserService;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Collections;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author yaseminturhan
 */
public class UserPanel extends javax.swing.JFrame {

    
    private UserService userService = new UserService();
    private BookService bookService = new BookService();
    private List<Book> libraryBooksList;
    private List<Book> userBooksList;
    private String loginUsername;
    /**
     * Creates new form UserPage
     */
    public UserPanel(String username) {
        initComponents();
        this.loginUsername = username;
        refreshList();
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        libraryTable = new javax.swing.JTable();
        listBtn = new javax.swing.JButton();
        takeBook = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myLibraryTable = new javax.swing.JTable();
        returnBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        libraryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Author", "Category", "PublishDate", "Publisher"
            }
        ));
        jScrollPane2.setViewportView(libraryTable);

        listBtn.setText("LIST BOOKS");
        listBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBtnActionPerformed(evt);
            }
        });

        takeBook.setText("TAKE BOOK");
        takeBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(takeBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(listBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(takeBook)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("kütüphane", jPanel1);

        myLibraryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Author", "Category", "PublishDate", "Publisher"
            }
        ));
        jScrollPane1.setViewportView(myLibraryTable);

        returnBtn.setText("RETURN THE BOOK");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(returnBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(returnBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("kullanıcı", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    
    private static final String FILE_NAME = "books.txt";
    
    private void listBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBtnActionPerformed
         refreshList();
    }//GEN-LAST:event_listBtnActionPerformed

    private void takeBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeBookActionPerformed
        // TODO add your handling code here:
        
        TableModel model1 = libraryTable.getModel();
        int indexs[] = libraryTable.getSelectedRows();
        
        Object[] row = new Object[6];
        
        DefaultTableModel model2 = (DefaultTableModel) myLibraryTable.getModel();
        
        for(int i = 0; i < indexs.length; i++)
        {
            
           row[0] = model1.getValueAt(indexs[i], 0);
           row[1] = model1.getValueAt(indexs[i], 1);
           row[2] = model1.getValueAt(indexs[i], 2);
           row[3] = model1.getValueAt(indexs[i], 3);
           row[4] = model1.getValueAt(indexs[i], 4);
           row[5] = model1.getValueAt(indexs[i], 5);
            
           model2.addRow(row);
        } 
    }//GEN-LAST:event_takeBookActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        TableModel model1 = myLibraryTable.getModel();
        int indexs[] = myLibraryTable.getSelectedRows();
        Object[] row = new Object[6];
        DefaultTableModel model2 = (DefaultTableModel) libraryTable.getModel();
        
       
        for(int i = 0; i < indexs.length; i++)
        {
            
           row[0] = model1.getValueAt(indexs[i], 0);
           row[1] = model1.getValueAt(indexs[i], 1);
           row[2] = model1.getValueAt(indexs[i], 2);
           row[3] = model1.getValueAt(indexs[i], 3);
           row[4] = model1.getValueAt(indexs[i], 4);
           row[5] = model1.getValueAt(indexs[i], 5);
            
           model2.addRow(row);
           
        } 
        
        
        
        
        
        
    }//GEN-LAST:event_returnBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPanel("m").setVisible(true);
            }
        });
    }
    
    private void refreshList(){
        libraryBooksList = bookService.getAll();
        userBooksList = userService.getUserBooks(loginUsername);
        Collections.sort(libraryBooksList);
        Collections.sort(userBooksList);
        String[] tableColumnNames = {"ID", "Name", "Author", "Publish Date", "Category", "Publisher" };
        DefaultTableModel libraryTableModel = (DefaultTableModel)libraryTable.getModel();
        DefaultTableModel userLibraryTableModel = (DefaultTableModel)myLibraryTable.getModel();
        
        libraryTableModel.getDataVector().removeAllElements();
        userLibraryTableModel.getDataVector().removeAllElements();
        for(int i=0; i<userBooksList.size(); i++){
           for(int j=0; j<libraryBooksList.size(); j++){
               if(userBooksList.get(i).getId().equals(libraryBooksList.get(j).getId())){   
                   libraryBooksList.remove(j);
                   break;
               }
           }
        }

        
        libraryTableModel.setColumnIdentifiers(tableColumnNames);
        for(Book book : libraryBooksList){ 
            String[] dataRow = {book.getId(), book.getName(), book.getAuthor(), book.getPublishDate(), book.getCategory(), book.getPublisher() };
            libraryTableModel.addRow(dataRow);
        }
        
        
        userLibraryTableModel.setColumnIdentifiers(tableColumnNames);  
        for(Book book : userBooksList){         
            String[] dataRow = {book.getId(), book.getName(), book.getAuthor(), book.getPublishDate(), book.getCategory(), book.getPublisher() };
            userLibraryTableModel.addRow(dataRow);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable libraryTable;
    private javax.swing.JButton listBtn;
    private javax.swing.JTable myLibraryTable;
    private javax.swing.JButton returnBtn;
    private javax.swing.JButton takeBook;
    // End of variables declaration//GEN-END:variables
}
